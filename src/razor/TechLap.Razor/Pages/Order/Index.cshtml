@page
@model TechLap.Razor.Pages.Order.IndexModel
@{
    ViewData["Title"] = "Order Management";
}

<head>
    <link href="~/css/order.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>

<div class="container-xl">
    <div class="table-responsive">
        <div class="table-wrapper">
            <div class="table-title">
                <div class="row">
                    <div class="col-sm-6">
                        <h2>Manage <b>Orders</b></h2>
                    </div>
                    <div class="col-sm-6">
                        <a href="#addOrderModal" class="btn btn-success" data-toggle="modal">
                            <i class="material-icons" style="vertical-align: middle; margin-right: 5px;">add</i>
                            <span>Add New Order</span>
                        </a>
                    </div>
                </div>
            </div>
            <table class="table table-striped table-hover" id="table1">
                <thead>
                    <tr>
                        <th>
                            <span class="custom-checkbox">
                                <input type="checkbox" id="selectAll">
                                <label for="selectAll"></label>
                            </span>
                        </th>
                        <th>Customer</th>
                        <th>Payment Method</th>
                        <th>Order Status</th>
                        <th>Total Price</th>
                        <th>Order Date</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Orders != null && Model.Orders.Any())
                    {
                        @foreach (var order in Model.Orders)
                        {
                            <tr>
                                <td>
                                    <span class="custom-checkbox">
                                        <input type="checkbox" id="checkbox{@order.Id}" name="options[]" value="{@order.Id}">
                                        <label for="checkbox{@order.Id}"></label>
                                    </span>
                                </td>
                                <td>@order.Customer.Name</td>
                                <td>@order.PaymentMethod</td>
                                <td>@order.OrderStatus</td>
                                <td>@order.TotalPrice</td>
                                <td>@order.OrderDate</td>
                                <td>
                                    <a href="#editOrderModal" class="edit" data-toggle="modal">
                                        <i class="material-icons" data-toggle="tooltip" title="Edit">&#xE254;</i>
                                    </a>
                                    <a href="#deleteOrderModal" class="delete" data-toggle="modal">
                                        <i class="material-icons" data-toggle="tooltip" title="Delete">&#xE872;</i>
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" style="text-align:center;">There are no orders to display</td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="clearfix" id="table1">
                <div class="hint-text" id="pagination-info"></div>
                <ul class="pagination justify-content-center"></ul>
            </div>
        </div>
    </div>
</div>

<!-- Add Order -->
<div id="addOrderModal" class="modal fade">
    <div class="modal-dialog modal-fulldata">
        <div class="modal-content">
            <form id="orderForm">
                <div class="modal-header">
                    <h4 class="modal-title">Add Order</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    <!-- Page 1: Add Order Detail -->
                    <div id="page1">
                        <div class="row">
                            <!-- Cột 1 -->
                            <div class="col-md-6">
                                <div class="card-body">
                                    <input id="searchInput" class="form-control mb-3" type="text" placeholder="Search Product..." />
                                    <div class="product-table" style="border: 1px solid #ddd; max-height: 400px; overflow-y: auto;">
                                        <table class="table table-striped table-hover add-table" id="table2">
                                            <thead>
                                                <tr>
                                                    <th style="width: 150px;">Brand</th>
                                                    <th>Model</th>
                                                    <th>Price</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.Products != null && Model.Products.Any())
                                                {
                                                    @foreach (var product in Model.Products)
                                                    {
                                                        <tr>
                                                            <td>@product.Brand</td>
                                                            <td>@product.Model</td>
                                                            <td>@product.Price</td>
                                                            <td>
                                                                <a href="#">
                                                                    <i class="material-icons" style="vertical-align: middle; margin-right: 5px;">add</i>
                                                                </a>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr>
                                                        <td colspan="4" style="text-align:center;">There are no products to display</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                    <nav id="table2">
                                        <ul class="pagination justify-content-center"></ul>
                                    </nav>
                                </div>
                            </div>
                            <!-- Cột 2 -->
                            <div class="col-md-6">
                                <div class="cart-body">
                                    <h4>Shopping Cart</h4>
                                    <div class="cart-table" style="border: 1px solid #ddd; max-height: 350px; overflow-y: auto;">
                                        <table class="table table-striped table-hover add-table" id="cartTable">
                                            <thead>
                                                <tr>
                                                    <th>Brand</th>
                                                    <th style="width: 200px;">Model</th>
                                                    <th>Price</th>
                                                    <th>Quantity</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <!-- Giỏ hàng sẽ được thêm vào đây -->
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-success" onclick="nextPage()">Next</button>
                        </div>
                    </div>
                    <!-- Page 2: Contact Information -->
                    <div id="page2" style="display: none;">
                        <div class="row">
                            <!-- Cột 1 -->
                            <div class="col-md-6">
                                <div class="card-body">
                                    <input id="searchInputCustomer" class="form-control mb-3" type="text" placeholder="Search Customer..." />
                                    <div class="product-table" style="border: 1px solid #ddd; max-height: 400px; overflow-y: auto;">
                                        <table class="table table-striped table-hover add-table custom-table" id="tableCustomers">
                                            <thead>
                                                <tr>
                                                    <th style="width: 20px;">Select</th>
                                                    <th style="width: 200px;">Name</th>
                                                    <th style="width: 200px;">Email</th>
                                                    <th>Phone Number</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model.Customers != null && Model.Customers.Any())
                                                {
                                                    @foreach (var customer in Model.Customers)
                                                    {
                                                        <tr onclick="selectCustomer(this)">
                                                            <td>
                                                                <input type="radio" name="customerSelect" value="@customer.Id" id="@customer.Id" required />
                                                            </td>
                                                            <td>@customer.Name</td>
                                                            <td>@customer.Email</td>
                                                            <td>@customer.PhoneNumber</td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr>
                                                        <td colspan="4" style="text-align:center;">There are no customers to display</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                    <nav id="table2">
                                        <ul class="pagination justify-content-center"></ul>
                                    </nav>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <input id="selectedCustomerName" class="form-control mt-3" type="text" placeholder="Selected Customer Name" disabled />
                                </div>
                                <div class="form-group">
                                    <label for="orderDate">Order Date</label>
                                    <input type="date" class="form-control" id="orderDate" disabled>
                                </div>
                                <div class="form-group">
                                    <label for="paymentMethod">Payment Method</label>
                                    <select class="form-control" id="paymentMethod" name="paymentMethod" required>
                                        <option value="CreditCard">Credit Card</option>
                                        <option value="PayPal">PayPal</option>
                                        <option value="BankTransfer">Bank Transfer</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="orderstatus">Order Status</label>
                                    <select class="form-control" id="orderstatus" name="orderstatus" required>
                                        <option value="Pending">Pending</option>
                                        <option value="Shipped">Shipped</option>
                                        <option value="Delivered">Delivered</option>
                                        <option value="Cancelled">Cancelled</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="discountCode">Discount Code</label>
                                    <input type="text" class="form-control" id="discountCode">
                                </div>
                                <div class="form-group">
                                    <label for="totalPrice">Total Price</label>
                                    <input type="number" class="form-control" id="totalPrice" disabled>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" onclick="prevPage()">Back</button>
                            <button type="submit" class="btn btn-success">Add</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Modal HTML -->
<div id="editOrderModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form>
                <div class="modal-header">
                    <h4 class="modal-title">Edit Order</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label>Name</label>
                        <input type="text" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Email</label>
                        <input type="email" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Address</label>
                        <textarea class="form-control" required></textarea>
                    </div>
                    <div class="form-group">
                        <label>Phone</label>
                        <input type="text" class="form-control" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancel">
                    <input type="submit" class="btn btn-info" value="Save">
                </div>
            </form>
        </div>
    </div>
</div>
<!-- Delete Modal HTML -->
<div id="deleteOrderModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <form>
                <div class="modal-header">
                    <h4 class="modal-title">Delete Order</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete these Records?</p>
                    <p class="text-warning"><small>This action cannot be undone.</small></p>
                </div>
                <div class="modal-footer">
                    <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancel">
                    <input type="submit" class="btn btn-danger" value="Delete">
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Tick Checkbox
    document.addEventListener('DOMContentLoaded', function () {
        const selectAllCheckbox = document.getElementById('selectAll');
        const checkboxes = document.querySelectorAll('input[type="checkbox"][name="options[]"]');
        const hintText = document.querySelector('.hint-text');

        var totalEntries = 0;

        // Check Total Select Entries
    @if (Model.Orders != null)
    {
        <text>totalEntries = @Model.Orders.Count();</text>
    }
            selectAllCheckbox.addEventListener('change', function () {
                checkboxes.forEach(function (checkbox) {
                    checkbox.checked = selectAllCheckbox.checked;
                });
                updateEntryCount();
            });
        function updateEntryCount() {
            const currentEntries = [...checkboxes].filter(checkbox => checkbox.checked).length;
            hintText.innerHTML = `Select <b>${currentEntries}</b> out of <b>${totalEntries}</b> entries`;
        }

        updateEntryCount();

        checkboxes.forEach(function (checkbox) {
            checkbox.addEventListener('change', updateEntryCount);
        });
    });

    // Kiểm tra xem giỏ hàng có sản phẩm không
    function checkCart() {
        const cartTableBody = document.querySelector('#cartTable tbody');
        if (cartTableBody.rows.length === 0) {
            alert('Giỏ hàng không có sản phẩm. Vui lòng thêm sản phẩm trước khi tiếp tục!');
            return false; // Giỏ hàng rỗng
        }

        // Calculate the total price before switching to page 2
        updateTotalPrice();
        return true; // Giỏ hàng có sản phẩm
    }

    // JavaScript để chuyển đổi giữa hai trang và kiểm tra validate
    function nextPage() {
        if (!checkCart()) return;
        document.getElementById("page1").style.display = "none";
        document.getElementById("page2").style.display = "block";
    }

    function prevPage() {
        document.getElementById("page1").style.display = "block";
        document.getElementById("page2").style.display = "none";
    }

    // Phân trang
    const rowsPerPage = 5;
    let currentPage = {};

    function displayPage(page, tableId) {
        const tableRows = document.querySelectorAll(`#${tableId} tbody tr`);
        const totalPages = Math.ceil(tableRows.length / rowsPerPage);

        if (page < 1 || page > totalPages) return;

        currentPage[tableId] = page;
        const startIndex = (page - 1) * rowsPerPage;
        const endIndex = startIndex + rowsPerPage;

        tableRows.forEach((row, index) => {
            row.style.display = (index >= startIndex && index < endIndex) ? "table-row" : "none";
        });

        updatePagination(tableId, totalPages);
        document.getElementById(`pagination-info-${tableId}`).innerText = `Page ${currentPage[tableId]} of ${totalPages}`;
    }

    function updatePagination(tableId, totalPages) {
        const pagination = document.querySelector(`#${tableId} .pagination`);
        pagination.innerHTML = `
                    <li class="page-item ${currentPage[tableId] === 1 ? "disabled" : ""}">
                        <a class="page-link" href="#" onclick="displayPage(currentPage['${tableId}'] - 1, '${tableId}')">Previous</a>
                    </li>
                `;

        for (let i = 1; i <= totalPages; i++) {
            pagination.innerHTML += `
                        <li class="page-item ${currentPage[tableId] === i ? "active" : ""}">
                            <a class="page-link" href="#" onclick="displayPage(${i}, '${tableId}')">${i}</a>
                        </li>
                    `;
        }

        pagination.innerHTML += `
                    <li class="page-item ${currentPage[tableId] === totalPages ? "disabled" : ""}">
                        <a class="page-link" href="#" onclick="displayPage(currentPage['${tableId}'] + 1, '${tableId}')">Next</a>
                    </li>
                `;
    }

    document.addEventListener("DOMContentLoaded", function () {
        const tables = document.querySelectorAll("table");

        tables.forEach(table => {
            const tableId = table.getAttribute("id");
            if (!tableId) return;

            currentPage[tableId] = 1;
            displayPage(1, tableId);
        });
    });

    // Hàm tìm kiếm chung
    function searchTable(inputId, tableId) {
        const searchInput = document.getElementById(inputId);
        const tableRows = document.querySelectorAll(`#${tableId} tbody tr`);

        searchInput.addEventListener('input', () => {
            const searchTerm = searchInput.value.toLowerCase();

            tableRows.forEach(row => {
                const cells = row.cells;
                let found = false;

                // Kiểm tra tất cả các ô trong hàng
                for (let i = 0; i < cells.length; i++) {
                    if (cells[i].textContent.toLowerCase().includes(searchTerm)) {
                        found = true;
                        break;
                    }
                }

                // Hiển thị hoặc ẩn hàng dựa trên kết quả tìm kiếm
                row.style.display = found ? '' : 'none';
            });
        });
    }

    // Khởi tạo tìm kiếm cho từng bảng
    document.addEventListener('DOMContentLoaded', () => {
        searchTable('searchInput', 'tableProducts'); // Tìm kiếm cho bảng sản phẩm
        searchTable('searchInputCustomer', 'tableCustomers'); // Tìm kiếm cho bảng khách hàng
    });

    //Add Product To Cart
    document.addEventListener('DOMContentLoaded', () => {
        const searchInput = document.getElementById('searchInput');
        const tableRows = document.querySelectorAll('#table2 tbody tr');
        const cartTableBody = document.querySelector('#cartTable tbody');

        searchInput.addEventListener('input', () => {
            const searchTerm = searchInput.value.toLowerCase();

            tableRows.forEach(row => {
                const brandCell = row.cells[0].textContent.toLowerCase();
                const modelCell = row.cells[1].textContent.toLowerCase();

                if (brandCell.includes(searchTerm) || modelCell.includes(searchTerm)) {
                    row.style.display = ''; // Hiển thị hàng
                } else {
                    row.style.display = 'none'; // Ẩn hàng
                }
            });
        });

        // Thêm sản phẩm vào giỏ hàng
        tableRows.forEach(row => {
            const addButton = row.querySelector('a');

            addButton.addEventListener('click', (event) => {
                event.preventDefault();
                const brand = row.cells[0].textContent;
                const model = row.cells[1].textContent;
                const price = parseFloat(row.cells[2].textContent);

                // Kiểm tra xem sản phẩm đã tồn tại trong giỏ hàng chưa
                const existingRow = Array.from(cartTableBody.rows).find(r => {
                    return r.cells[0].textContent === brand && r.cells[1].textContent === model;
                });

                if (existingRow) {
                    // Nếu đã tồn tại, chỉ cần tăng số lượng
                    const quantityInput = existingRow.querySelector('.quantity');
                    quantityInput.value = parseInt(quantityInput.value) + 1;
                    const totalPriceCell = existingRow.querySelector('.price');
                    totalPriceCell.textContent = (price * parseInt(quantityInput.value)).toFixed(2);
                } else {
                    // Nếu không tồn tại, tạo một dòng mới trong bảng giỏ hàng
                    const newRow = cartTableBody.insertRow();
                    newRow.innerHTML = `
                                <td>${brand}</td>
                                <td>${model}</td>
                                <td class="price">${price.toFixed(2)}</td>
                                <td>
                                    <input type="number" class="quantity" value="1" min="1" />
                                </td>
                                <td>
                                    <button class="delete-btn">Xoá</button>
                                </td>
                            `;

                    // Tính toán giá và cập nhật giá khi thay đổi số lượng
                    const quantityInput = newRow.querySelector('.quantity');
                    quantityInput.addEventListener('input', () => {
                        const quantity = parseInt(quantityInput.value);
                        const totalPriceCell = newRow.querySelector('.price');
                        totalPriceCell.textContent = (price * quantity).toFixed(2);
                    });

                    // Xoá sản phẩm ra khỏi giỏ hàng
                    const deleteButton = newRow.querySelector('.delete-btn');
                    deleteButton.addEventListener('click', () => {
                        cartTableBody.removeChild(newRow);
                    });
                }
            });
        });
    });

    // Select Customer
    function selectCustomer(row) {
        // Lấy radio button trong hàng đã chọn
        const radio = row.querySelector('input[type="radio"]');
        if (radio) {
            radio.checked = true; // Đánh dấu radio button là checked

            // Cập nhật tên khách hàng vào ô input
            const customerName = row.cells[1].innerText; // Lấy tên từ ô thứ hai
            document.getElementById('selectedCustomerName').value = customerName; // Cập nhật ô input
        }
    }

    // Total Price
    function updateTotalPrice() {
        let totalPrice = 0;

        // Loop through each row in the cart table
        document.querySelectorAll('#cartTable tbody tr').forEach(row => {
            const price = parseFloat(row.querySelector('.price').textContent); // Get the price
            const quantity = parseInt(row.querySelector('.quantity').value);   // Get the quantity

            // Calculate and add the subtotal for this row
            totalPrice += price;
        });

        // Update the Total Price field
        document.getElementById('totalPrice').value = totalPrice.toFixed(2); // Format to 2 decimal places
    }

    // Event listeners for quantity change and delete button
    document.querySelectorAll('#cartTable').forEach(table => {
        table.addEventListener('input', event => {
            if (event.target.classList.contains('quantity')) {
                updateTotalPrice();
            }
        });

        table.addEventListener('click', event => {
            if (event.target.classList.contains('delete-btn')) {
                // Remove the row and update total price
                event.target.closest('tr').remove();
                updateTotalPrice();
            }
        });
    });
</script>
