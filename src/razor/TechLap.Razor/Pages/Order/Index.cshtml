@page
@model TechLap.Razor.Pages.Order.IndexModel
@{
    ViewData["Title"] = "Order Management";
}

<head>
    <link href="~/css/order.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>

<div class="container-xl">
    <div class="table-responsive">
        <div class="table-wrapper">
            <div class="table-title">
                <div class="row">
                    <div class="col-sm-6">
                        <h2>Manage <b>Orders</b></h2>
                    </div>
                    <div class="col-sm-6">
                        <a href="/Order/CreateOrder" class="btn btn-success" data-toggle="modal">
                            <i class="material-icons" style="vertical-align: middle; margin-right: 5px;">add</i>
                            <span>Add New Order</span>
                        </a>
                    </div>
                </div>
            </div>
            <table class="table table-striped table-hover" id="table1">
                <thead>
                    <tr>
                        <th>
                            <span class="custom-checkbox">
                                <input type="checkbox" id="selectAll">
                                <label for="selectAll"></label>
                            </span>
                        </th>
                        <th>Customer</th>
                        <th>Payment Method</th>
                        <th>Order Status</th>
                        <th>Total Price</th>
                        <th>Order Date</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Orders != null && Model.Orders.Any())
                    {
                        @foreach (var order in Model.Orders)
                        {
                            <tr>
                                <td>
                                    <span class="custom-checkbox">
                                        <input type="checkbox" id="checkbox{@order.Id}" name="options[]" value="{@order.Id}">
                                        <label for="checkbox{@order.Id}"></label>
                                    </span>
                                </td>
                                <td>@order.Customer.Name</td>
                                <td>@order.PaymentMethod</td>
                                <td>@order.OrderStatus</td>
                                <td>@order.TotalPrice</td>
                                <td>@order.OrderDate.ToString("yyyy-MM-dd")</td>
                                <td>
                                    <a href="/Order/EditOrder" class="edit" data-toggle="modal">
                                        <i class="material-icons" data-toggle="tooltip" title="Edit">&#xE254;</i>
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" style="text-align:center;">There are no orders to display</td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="clearfix" id="table1">
                <div class="hint-text" id="pagination-info"></div>
                <ul class="pagination justify-content-center"></ul>
            </div>
        </div>
    </div>
</div>

<script>
    // Tick Checkbox
    document.addEventListener('DOMContentLoaded', function () {
        const selectAllCheckbox = document.getElementById('selectAll');
        const checkboxes = document.querySelectorAll('input[type="checkbox"][name="options[]"]');
        const hintText = document.querySelector('.hint-text');

        var totalEntries = 0;

        // Check Total Select Entries
    @if (Model.Orders != null)
    {
        <text>totalEntries = @Model.Orders.Count();</text>
    }
            selectAllCheckbox.addEventListener('change', function () {
                checkboxes.forEach(function (checkbox) {
                    checkbox.checked = selectAllCheckbox.checked;
                });
                updateEntryCount();
            });
        function updateEntryCount() {
            const currentEntries = [...checkboxes].filter(checkbox => checkbox.checked).length;
            hintText.innerHTML = `Select <b>${currentEntries}</b> out of <b>${totalEntries}</b> entries`;
        }

        updateEntryCount();

        checkboxes.forEach(function (checkbox) {
            checkbox.addEventListener('change', updateEntryCount);
        });
    });

    // Phân trang
    const rowsPerPage = 5;
    let currentPage = {};

    function displayPage(page, tableId) {
        const tableRows = document.querySelectorAll(`#${tableId} tbody tr`);
        const totalPages = Math.ceil(tableRows.length / rowsPerPage);

        if (page < 1 || page > totalPages) return;

        currentPage[tableId] = page;
        const startIndex = (page - 1) * rowsPerPage;
        const endIndex = startIndex + rowsPerPage;

        tableRows.forEach((row, index) => {
            row.style.display = (index >= startIndex && index < endIndex) ? "table-row" : "none";
        });

        updatePagination(tableId, totalPages);
        document.getElementById(`pagination-info-${tableId}`).innerText = `Page ${currentPage[tableId]} of ${totalPages}`;
    }

    function updatePagination(tableId, totalPages) {
        const pagination = document.querySelector(`#${tableId} .pagination`);
        pagination.innerHTML = `
                    <li class="page-item ${currentPage[tableId] === 1 ? "disabled" : ""}">
                        <a class="page-link" href="#" onclick="displayPage(currentPage['${tableId}'] - 1, '${tableId}')">Previous</a>
                    </li>
                `;

        for (let i = 1; i <= totalPages; i++) {
            pagination.innerHTML += `
                        <li class="page-item ${currentPage[tableId] === i ? "active" : ""}">
                            <a class="page-link" href="#" onclick="displayPage(${i}, '${tableId}')">${i}</a>
                        </li>
                    `;
        }

        pagination.innerHTML += `
                    <li class="page-item ${currentPage[tableId] === totalPages ? "disabled" : ""}">
                        <a class="page-link" href="#" onclick="displayPage(currentPage['${tableId}'] + 1, '${tableId}')">Next</a>
                    </li>
                `;
    }

    document.addEventListener("DOMContentLoaded", function () {
        const tables = document.querySelectorAll("table");

        tables.forEach(table => {
            const tableId = table.getAttribute("id");
            if (!tableId) return;

            currentPage[tableId] = 1;
            displayPage(1, tableId);
        });
    });
</script>
